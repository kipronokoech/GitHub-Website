[{"content":"This guide will discuss how to install Python manually on a Linux machine. For your convenience, we will also discuss how to uninstall Python installed in this way.\nSteps to Follow to Install Python Manually First of all, we need to update package repositories and install dependencies.\nStep 1: Update repositories On Debian-based distributions, execute (modify the commands according to the distro you are running):\n1 2 3 4 sudo apt update sudo apt install build-essential zlib1g-dev \\ libncurses5-dev libgdbm-dev libnss3-dev \\ libssl-dev libreadline-dev libffi-dev curl Step 2: Download the stable release of Python on its official website In this step, go to https://www.python.org/downloads/source/ and download XZ compressed source tarball (.tar.xz) file. This file contains all the source files we can build to get the Python we want (I am downloading Python 3.10.5, so I get, Python-3.10.5.tar.xz file).\nStep 3: Extract the tarball Use the inbuilt extraction functionality to extract the tarball, or you can use the tar command in Python as follows\n1 tar -xf Python-****.tar.xz (In my case, I have to run tar -xf Python-3.10.5.tar.xz)\nStep 3: Run the configuration This is accomplished by running the following command on Linux Terminal\n1 cd Python-****/ \u0026amp;\u0026amp; ./configure That is, cd into the extracted directory and run configure file.\nStep 4: Build the package Since we want to install this Python version along with the preinstalled one, we will run:\n1 sudo make altinstall Now, Python 3.10 is installed, and we can wake it up by running\n1 python3.10 or\n1 /usr/local/bin/python3.10 Remove Python install Manually To do that, save the following commands on the bash file named “uninstall_python.sh” (you can give it any name, really) and execute it with sudo privileges.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 loc=\u0026#39;/usr/local/\u0026#39; py_version=\u0026#34;$1\u0026#34; rm -rf \\ $HOME/.local/lib/Python${py_version} \\ ${loc}bin/python${py_version} \\ ${loc}bin/python${py_version}-config \\ ${loc}bin/pip${py_version} \\ ${loc}bin/include/python${py_version} \\ ${loc}lib/libpython${py_version}.a \\ ${loc}lib/python${py_version} \\ ${loc}lib/pkgconfig/python-${py_version}.pc \\ ${loc}lib/libpython${py_version}m.a \\ ${loc}bin/python${py_version}m \\ ${loc}bin/2to3-${py_version} \\ ${loc}bin/python${py_version}m-config \\ ${loc}bin/idle${py_version} \\ ${loc}bin/pydoc${py_version} \\ ${loc}bin/pyvenv-${py_version} \\ ${loc}share/man/man1/python${py_version}.1 \\ ${loc}include/python${py_version}m \\ ${loc}bin/easy_install-${py_version} Execute the bash script by running:\n1 sudo bash \u0026lt;location of uninstall_python.sh\u0026gt; \u0026lt;python version to remove\u0026gt; In my case, I will cd into the location of uninstall_python.sh and run the command.\n1 sudo bash uninstall_python.sh 3.10 ","permalink":"https://kipronokoech.github.io/posts/how-to-install-python-manually-in-linux/","summary":"This guide will discuss how to install Python manually on a Linux machine. For your convenience, we will also discuss how to uninstall Python installed in this way.\nSteps to Follow to Install Python Manually First of all, we need to update package repositories and install dependencies.\nStep 1: Update repositories On Debian-based distributions, execute (modify the commands according to the distro you are running):\n1 2 3 4 sudo apt update sudo apt install build-essential zlib1g-dev \\ libncurses5-dev libgdbm-dev libnss3-dev \\ libssl-dev libreadline-dev libffi-dev curl Step 2: Download the stable release of Python on its official website In this step, go to https://www.python.org/downloads/source/ and download XZ compressed source tarball (.tar.xz) file. This file contains all the source files we can build to get the Python we want (I am downloading Python 3.10.5, so I get, Python-3.10.5.tar.xz file).\nStep 3: Extract the tarball Use the inbuilt extraction functionality to extract the tarball, or you can use the tar command in Python as follows","title":"How to Install Python Manually in Linux"},{"content":"Connecting to a Remote Server through SSH SSH (Secured Shell) is a program for accessing and managing remote machines. It is intended to provide secure encrypted communications between two untrusted hosts over an insecure network.\nIn this article, we will refer to the machine initiating the SSH connection as the local or client system and the device on the receiving end as the server or remote machine.\nNote that the installation commands may be different based on the system you are running. Nevertheless, it should be easy to tweak these commands on Linux and MacOS.\nInstall an OpenSSH Client on the Local Machine Check if the SSH client is installed by running ssh on the terminal. If the OpenSSH client is not installed, you can install it using the line 1 sudo apt install openssh-client Install an OpenSSH Server on the Remote System Check if OpenSSH Server is installed by running ssh localhost.\nIf the server is not installed, you will see something like this:\nssh: connect to host localhost port 22: Connection refused\nIf the server is not installed on the remote, you can install it using the following line\n1 sudo apt-get install openssh-server Note: If you intend to connect to and from the remote machine, you should install OpenSSH Client and OpenSSH Server on the local and remote machines.\nVerify that OpenSSH Server is running (by default, it should be running after installation) Run sudo service ssh status If the server daemon is not running, you can restart it with, 1 sudo service ssh restart Get the IP address of the remote machine using the sudo ifconfig -a command. (You may need to install net-tools if ifconfig is not found: sudo apt install net-tools) Connect via SSH General syntax to connect: ssh your_username@host_ip_address Allow SSH to establish the connection via firewall using UFW. Install UFW: sudo apt install ufw, Check if UFW is running: sudo ufw status, Start UFW: sudo ufw enable, When the VPS is set up for IPv6, make sure to confirm that UFW is set up to handle IPv6 as well: sudo nano /etc/default/ufw, Allow SSH: sudo ufw allow ssh or sudo ufw allow 22/tcp, The TCP protocol facilitates the communication on port 22 with this instruction. Allow TCP to connect using sudo ufw allow 2222/tcp Revoke permission for SSH: sudo ufw delete allow ssh. The same can be done for TCP. Every time you SSH to a remote server, you will be required to input the password for the remote machine as a form of authentication. Another way of authentication is to use SSH Keys.\nGenerating SSH Keys Generate SSH Keys of RSA type and 4096 bytes in size by running the command\n1 ssh-keygen -t rsa -b 4096 You can accept the defaults and set the passphrase if you want (keep the passphrase safe).\nAt this point, you can then copy the contents of id_rsa.pub and share them as needed for verification. You can do the copying manually or use the following commands.\n1 2 3 ls ~/.ssh ssh-add ~/.ssh/id_rsa cat ~/.ssh/id_rsa.pub | xclip -sel clip Using SSH Key-Based Authentication This Section discusses how to use the SSH Keys you generated above for authentication instead of using a password every time we SSH to a server.\n[On the local] After generating the SSH Keys in the previous Section, you will have a .ssh folder in the home directory with two files: id_rsa - This is a private key. DO NOT SHARE IT. id_rsa.pub - The associated public key. This is the key you should be sharing for authentication. [On the remote] Make a .ssh folder on the remotes\u0026rsquo;s home directory (if it does not exist already). Copy the public key on the local machine into the .ssh folder in the remote. You can rename it in the process (recommended). 1 scp ~/.ssh/id_rsa.pub koech@192.168.100.55:/home/koech/.ssh/dell_id_rsa.pub The command above copied id_rsa.pub as dell_id_rsa.pub to the remote machine with the user name koech and IP as 192.168.100.55.\nTo complete steps 4 and 5, you need to SSH into the remote machine (at this point, you have to use the password) using the ssh username@remove_ip command, for example, ssh koech@192.168.100.5.\n[On the remote] Copy the content of the file copied in (3) into another file named authorized_keys (don\u0026rsquo;t name that file any other way) by running 1 2 cd ~/.ssh/ cat dell_id_rsa.pub \u0026gt;\u0026gt; authorized_keys You can check that the keys were correctly copied by running:\n1 cat authorized_keys [On the remote] Run the following commands on the .ssh folder chmod 700 path/to/ssh_folder\nchmod 600 path/to/ssh_folder_contents\nthat is,\n1 2 chmod 700 . chmod 600 * At this point, you should be able to SSH into the remote machine without a password.\n","permalink":"https://kipronokoech.github.io/posts/ssh_essentials/","summary":"Connecting to a Remote Server through SSH SSH (Secured Shell) is a program for accessing and managing remote machines. It is intended to provide secure encrypted communications between two untrusted hosts over an insecure network.\nIn this article, we will refer to the machine initiating the SSH connection as the local or client system and the device on the receiving end as the server or remote machine.\nNote that the installation commands may be different based on the system you are running. Nevertheless, it should be easy to tweak these commands on Linux and MacOS.\nInstall an OpenSSH Client on the Local Machine Check if the SSH client is installed by running ssh on the terminal. If the OpenSSH client is not installed, you can install it using the line 1 sudo apt install openssh-client Install an OpenSSH Server on the Remote System Check if OpenSSH Server is installed by running ssh localhost.","title":"SSH Essentials"},{"content":"Some MarkDown Syntax Working with URLs on MarkDown Some URL\n1 Some link [Link to Unsplash](https://unsplash.com/@chelseanscott?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText) Rendered as\nSome link Link to Unsplash Use HTML code if you want to open link on a new tab. Here is an example.\n1 \u0026lt;a href=\u0026#34;https://unsplash.com\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt; Link2\u0026lt;a/\u0026gt; Rendering code on MarkDown The Code can be rendered using the the following Syntax.\n1 2 3 `\u0026lt;language\u0026gt; (use 3 `) (some code here) ` (use 3 `) Here is some Python code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 import psycopg2 data_folder = \u0026#34;clean_data/August\u0026#34; import os import pandas as pd import numpy as np #Establishing the connection conn = psycopg2.connect( database=\u0026#34;kiprono_database2\u0026#34;, user=\u0026#39;postgres\u0026#39;, password=\u0026#39;pass1\u0026#39;, host=\u0026#39;127.0.0.1\u0026#39;, port= \u0026#39;5432\u0026#39; ) #Setting auto commit false conn.autocommit = True #Creating a cursor object using the cursor() method cursor = conn.cursor() files = os.listdir(data_folder) print(files) for file in files: df = pd.read_csv(os.path.join(data_folder, file)) df = df[[\u0026#39;wmoID\u0026#39;, \u0026#39;kmdID\u0026#39;, \u0026#39;Year\u0026#39;, \u0026#39;Month\u0026#39;, \u0026#39;Day\u0026#39;, \u0026#39;Hour\u0026#39;, \u0026#39;AirTemp\u0026#39;, \u0026#39;Tmax\u0026#39;, \u0026#39;Tmin\u0026#39;]] data = df.to_dict(orient=\u0026#34;records\u0026#34;) for data_point in data: result = list(data_point.values()) insert_command = \u0026#39;\u0026#39;\u0026#39;INSERT INTO AMSS(wmoID, kmdID, Year, Month, Day, Hour, AirTemp, Tmax, Tmin)\\ VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)\u0026#39;\u0026#39;\u0026#39; try: cursor.execute(insert_command, result) # Commit your changes in the database conn.commit() except psycopg2.errors.UniqueViolation as e: print(e) continue # Closing the connection conn.close() More code on CSS\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 div.highlight button { color: #adb5bd; box-sizing: border-box; transition: 0.2s ease-out; cursor: pointer; user-select: none; background: rgba(0, 0, 0, 0.15); border: 1px solid rgba(0, 0, 0, 0); padding: 5px 10px; font-size: 0.8em; position: absolute; top: 0; right: 0; border-radius: 0 0.15rem; } JavaScript:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 var copy = function(target) { var textArea = document.createElement(\u0026#39;textarea\u0026#39;) textArea.setAttribute(\u0026#39;style\u0026#39;,\u0026#39;width:1px;border:0;opacity:0;\u0026#39;) document.body.appendChild(textArea) textArea.value = target.innerHTML textArea.select() document.execCommand(\u0026#39;copy\u0026#39;) document.body.removeChild(textArea) } var pres = document.querySelectorAll(\u0026#34;.comment-body \u0026gt; pre\u0026#34;) pres.forEach(function(pre){ var button = document.createElement(\u0026#34;button\u0026#34;) button.className = \u0026#34;btn btn-sm\u0026#34; button.innerHTML = \u0026#34;copy\u0026#34; pre.parentNode.insertBefore(button, pre) button.addEventListener(\u0026#39;click\u0026#39;, function(e){ e.preventDefault() copy(pre.childNodes[0]) }) }) Rendering mathematical equations Step 1: Create layouts/partials/extend_head.html file with the following content:\n1 2 3 4 5 6 {{ if or .Params.math .Site.Params.math }} \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css\u0026#34; integrity=\u0026#34;sha384-AfEj0r4/OFrOo5t7NnNe46zW/tFgW6x/bCJG8FqQCEo3+Aro6EYUG4+cU+KJWu/X\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;script defer src=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.js\u0026#34; integrity=\u0026#34;sha384-g7c+Jr9ZivxKLnZTDUhnkOnsh30B4H0rpLUpJ4jAIKs4fnJI+sEnkvrMWph2EDg4\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script defer src=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/auto-render.min.js\u0026#34; integrity=\u0026#34;sha384-mll67QQFJfxn0IYznZYonOWZ644AWYC+Pt2cHqMaRhXVrursRwvLnLaebdGIlYNa\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; onload=\u0026#34;renderMathInElement(document.body);\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; {{ end }} Step 2: add the parameter in order to enable MathJax on config.yml as follows:\n1 2 params: math: true Examples\n1 2 3 4 5 **The Cauchy-Schwarz Inequality** $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ The following example show the quadratic equation. $$x=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}$$ Rendered as\nThe Cauchy-Schwarz Inequality\n$$\\left( \\sum_{k=1}^n a_k b_k\\right)^2 \\leq\\left( \\sum_{k=1}^n a_k^2\\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$\nThe following example show the quadratic equation. $$x=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}$$\nLoading an image in MarkDown 1 ![Alt text of image](/images/example1.jpg) rendered as\nAdd #center after image to center align an image\n1 ![Alt text of image](/images/example1.jpg#center) rendered as followed\nLists in MarkDown Itemized list on Markdown:\n1 2 3 4 5 - Item 1 - Item 2 - sub item 1 - sub item 2 - Item 3 Rendered as:\nItem 1 Item 2 sub item 1 sub item 2 Item 3 Numbered list on Markdown:\n1 2 3 4 5 1. Item 1 1. Item 2 1. sub item 1 1. sub item 2 1. Item 3 Item 1 Item 2 sub item 1 sub item 2 Item 3 Notes about Hugo Use hugo server -D to open a local server which renderes drafts. By default, hugo organizes posts by date.\nIf you want to override that provide the weight: \u0026lt;int\u0026gt; on the front-matter. The smaller the \u0026lt;int\u0026gt; the higher the article in the list. I have provided the value 99 for this article.\nUse at least H2 on the title headings. H1 headings do not show on the Table of Content. Take note.\nPossible Problems you will run into in Hugo and how to self them Problem 1: Module \u0026ldquo;PaperMod\u0026rdquo; is not compatible with this Hugo version; run \u0026ldquo;hugo mod graph\u0026rdquo; for more information.\nSolution 1: Hugo is probably outdated. Updated it by installing the latest version . You can install the downloaded .deb file by running\n1 sudo dpkg --install \u0026lt;path_to_the_deb_file\u0026gt; Conclusion Notes for self\n","permalink":"https://kipronokoech.github.io/posts/notes-for-markdown-and-hugo/","summary":"Some MarkDown Syntax Working with URLs on MarkDown Some URL\n1 Some link [Link to Unsplash](https://unsplash.com/@chelseanscott?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText) Rendered as\nSome link Link to Unsplash Use HTML code if you want to open link on a new tab. Here is an example.\n1 \u0026lt;a href=\u0026#34;https://unsplash.com\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt; Link2\u0026lt;a/\u0026gt; Rendering code on MarkDown The Code can be rendered using the the following Syntax.\n1 2 3 `\u0026lt;language\u0026gt; (use 3 `) (some code here) ` (use 3 `) Here is some Python code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 import psycopg2 data_folder = \u0026#34;clean_data/August\u0026#34; import os import pandas as pd import numpy as np #Establishing the connection conn = psycopg2.connect( database=\u0026#34;kiprono_database2\u0026#34;, user=\u0026#39;postgres\u0026#39;, password=\u0026#39;pass1\u0026#39;, host=\u0026#39;127.0.0.1\u0026#39;, port= \u0026#39;5432\u0026#39; ) #Setting auto commit false conn.","title":"Notes on Hugo and Markdown"},{"content":"Downloadable CV My current curriculum vitae can be downloaded or viewed from here.\nSkills The following lists highlight some of my skills in Data Science.\nData Science and Statistics Machine learning Deep learning Exploratory data analysis Data visualization Web scraping Data analysis Database Management Data wrangling Programming and Tools Python and R MySQL Git VC LaTeX Microsoft Office TensorFlow and Sklearn Scrapy and Selenium Tableau and Matplotlib Education Stellenbosch University Certificate: Master's Degree in Applied Mathematics (Data Science) Supervisor: Dr. Bubacarr Bah Full scholarship by African Institute for Mathematical Sciences, (AIMS) Cape Town, South Africa 2020-2022 Stellenbosch University Certificate: Master's Degree in Mathematical Sciences, Cum Laude Supervisor: Dr. Bubacarr Bah Full scholarship by African Institute for Mathematical Sciences, (AIMS) Cape Town, South Africa 2019-2020 Jomo Kenyatta University of Agriculture and Technology Certificate: Bachelors Degree in Science (Statistics), First Class Honors Nairobi, Kenya 2013-2017 Work History SunKing Limited Data Intelligence Analyst,\nA brief: Analysing data using Looker, AWS, SQL and Python to drive the sales of our products. My team also works in designing pilots, analysing the data from the pilots and make recommendation based on the findings. Nairobi, Kenya Jan 2023 - Kenya Meteorological Deparment (KMD) Data Science Intern,\nA brief: Working on techniques to improve weather forecasting. Techniques implemented include machine learning, testing new parameterization schemes and optimization of data assimilation procedures. Nairobi, Kenya Apr - Oct, 2022 Science of Intelligence Reseach Fellow,\nA brief: Worked on a computer vision project at Technische Universität Berlin. Berlin, Germany Feb-Aug 2021 PACT-Timiza Data Assistant,\nA brief: Data entry, management and analysis role involving HIV patients information aimed to improve adherence to anti-retroviral drugs. Migori, Kenya 2013-2017 Award and Honors Golden Key Award, for being among the top 15% academic performers among the 2019 cohort (2020-2022)\n. African Institute for Mathematical Sciences(AIMS) Scholarship, for MSc Mathematics at S.U (2019-2010)\u0026(2020-2021)\n. Award for Excellence, African Institute for Mathematical Sciences(AIMS) (Jan 2019- Nov 2019)\n. Vice-Chancellor’s Academic Award, the best student in Bachelor of Science (Statistics option) (2014/2015, 2015/2016 and 2016/2017 academic years)\n. First place, Mathematics contest with 1954 contestants (2012)\n. Now I am currently:\nWorking as a Data Intelligence Analyst (Starting January 3, 2023) at Sun King Limited, Reading the book \u0026ldquo;Deep Work\u0026rdquo; by Cal Newport. Learning new skills - currently learning R programming language Writing Data Science articles on Medium and Posts section of this site. Teaching a Data Science course to May 2023 cohort of Jomo Kenyatta University of Agriculture and Technology. Declaration: I hereby declare that the information furnished above is true\n","permalink":"https://kipronokoech.github.io/about-me/","summary":"About Me","title":"About Me"},{"content":"Not doing anything now\n","permalink":"https://kipronokoech.github.io/blog/","summary":"blog","title":"Blog"}]